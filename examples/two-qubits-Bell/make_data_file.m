
%
% Create an example MATLAB data file for `tomorun`. In this example, we imagine an
% experiment which aims to prepare the entangled state (|01> + i |10>)/sqrt(2). We
% suppose that the true state is in fact a noisy version of this state (see below).
% Two-qubit pauli measurements were simulated.
%

% To run this example, you need:
%
%  - QLib: http://www.tau.ac.il/~quantum/qlib/intro.html
%
%  - CVX: http://cvxr.com/cvx/
%

nqubits = 2
dim = 2^nqubits

% pure2dm from QLib library: http://www.tau.ac.il/~quantum/qlib/intro.html
rho_TargetBell = pure2dm([0;1;1i;0]/sqrt(2));

% The data below were simulated from the following true state:
%    rho_sim = 0.95*rho_TargetBell + 0.05*eye(4)/4;

% These are the POVM effects. We simply do Pauli measurements on each of the 2 qubits,
% with a total of 36 POVM effects (9 different settings).
Emn = zeros(4,4,36);
for k1=1:3
  for k2=1:3
    for ev1=1:2
      for ev2=1:2
        k = (k2-1)*3*2*2 + (k1-1)*2*2 + (ev2-1)*2 + ev1;
        Emn(:,:,k) = ProjPauli([k1, k2], [ev1, ev2]);
      end
    end
  end
end


% These are the measurement counts. Nm(k) is the number of times the POVM effect
% Emn(:,:,k) was observed. The numbers here were obtained by simulating measurements
% from the state `rho_sim` given above using the described measurement settings.
Nm = [ ...
   122; ...
   105; ...
   135; ...
   138; ...
   248; ...
     7; ...
     5; ...
   240; ...
   102; ...
   131; ...
   119; ...
   148; ...
     7; ...
   252; ...
   240; ...
     1; ...
   125; ...
   135; ...
   127; ...
   113; ...
   140; ...
   124; ...
   118; ...
   118; ...
   122; ...
   119; ...
   135; ...
   124; ...
   126; ...
   123; ...
   134; ...
   117; ...
     9; ...
   233; ...
   253; ...
     5; ...
];


% now, calculate the maximum likelihood estimate for this data
% We use CVX for convex optimization: http://cvxr.com/cvx/

cvx_begin

  variable rho_MLE(dim, dim) hermitian;
  
  minimize llh_func( Nm, Emn, rho_MLE )
  
  % subject to:
  rho_MLE == hermitian_semidefinite(dim)
  trace(rho_MLE) == 1

cvx_end



%
% Now, we can save the data to a MAT file for the `tomorun` program.
%

Cdata = struct();

% the dimension of the Hilbert space
Cdata.dim = dim;

% the measurement data -- POVM effects and counts
Cdata.Emn = Emn;
Cdata.Nm = Nm;

% the maximum likelihood estimate -- useful for some figures of merit, such as trace
% distance to MLE
Cdata.rho_MLE = rho_MLE;

% An entanglement witness which is appropriate for our target state
Cdata.EntglWitness = -eye(4) - kron(QLib.sigma.x,QLib.sigma.y) ...
    + kron(QLib.sigma.y,QLib.sigma.x) - kron(QLib.sigma.z,QLib.sigma.z) ;


% The reference state which is the "target state"
Cdata.rho_ref = rho_TargetBell;

% finally, save the data to the .MAT file
save('thedata.mat', '-struct', 'Cdata', '-v6');
