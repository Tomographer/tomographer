var ezmatio_8h =
[
    [ "Exception", "class_tomographer_1_1_m_a_t_1_1_exception.html", "class_tomographer_1_1_m_a_t_1_1_exception" ],
    [ "VarError", "class_tomographer_1_1_m_a_t_1_1_var_error.html", "class_tomographer_1_1_m_a_t_1_1_var_error" ],
    [ "VarReadError", "class_tomographer_1_1_m_a_t_1_1_var_read_error.html", "class_tomographer_1_1_m_a_t_1_1_var_read_error" ],
    [ "VarTypeError", "class_tomographer_1_1_m_a_t_1_1_var_type_error.html", "class_tomographer_1_1_m_a_t_1_1_var_type_error" ],
    [ "VarMatTypeError", "class_tomographer_1_1_m_a_t_1_1_var_mat_type_error.html", "class_tomographer_1_1_m_a_t_1_1_var_mat_type_error" ],
    [ "FileOpenError", "class_tomographer_1_1_m_a_t_1_1_file_open_error.html", "class_tomographer_1_1_m_a_t_1_1_file_open_error" ],
    [ "InvalidIndexError", "class_tomographer_1_1_m_a_t_1_1_invalid_index_error.html", "class_tomographer_1_1_m_a_t_1_1_invalid_index_error" ],
    [ "File", "class_tomographer_1_1_m_a_t_1_1_file.html", "class_tomographer_1_1_m_a_t_1_1_file" ],
    [ "DimList", "class_tomographer_1_1_m_a_t_1_1_dim_list.html", "class_tomographer_1_1_m_a_t_1_1_dim_list" ],
    [ "IndexList", "class_tomographer_1_1_m_a_t_1_1_index_list.html", "class_tomographer_1_1_m_a_t_1_1_index_list" ],
    [ "IndexListIterator", "class_tomographer_1_1_m_a_t_1_1_index_list_iterator.html", "class_tomographer_1_1_m_a_t_1_1_index_list_iterator" ],
    [ "VarValueDecoder", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder.html", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder" ],
    [ "Var", "class_tomographer_1_1_m_a_t_1_1_var.html", "class_tomographer_1_1_m_a_t_1_1_var" ],
    [ "MatType", "struct_tomographer_1_1_m_a_t_1_1_mat_type.html", null ],
    [ "MatType< MAT_T_DOUBLE >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___d_o_u_b_l_e_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___d_o_u_b_l_e_01_4" ],
    [ "MatType< MAT_T_SINGLE >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___s_i_n_g_l_e_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___s_i_n_g_l_e_01_4" ],
    [ "MatType< MAT_T_INT64 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t64_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t64_01_4" ],
    [ "MatType< MAT_T_INT32 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t32_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t32_01_4" ],
    [ "MatType< MAT_T_INT16 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t16_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t16_01_4" ],
    [ "MatType< MAT_T_INT8 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t8_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___i_n_t8_01_4" ],
    [ "MatType< MAT_T_UINT64 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t64_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t64_01_4" ],
    [ "MatType< MAT_T_UINT32 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t32_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t32_01_4" ],
    [ "MatType< MAT_T_UINT16 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t16_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t16_01_4" ],
    [ "MatType< MAT_T_UINT8 >", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t8_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_mat_type_3_01_m_a_t___t___u_i_n_t8_01_4" ],
    [ "VarValueDecoder< T, typename std::enable_if<(std::numeric_limits< T >::is_specialized||Tools::is_complex< T >::value)>::type >", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_t_00_01typename_01std_1_1enable__if_3_0744c13158d27ef5605347fa30601550ab.html", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_t_00_01typename_01std_1_1enable__if_3_0744c13158d27ef5605347fa30601550ab" ],
    [ "VarShape", "struct_tomographer_1_1_m_a_t_1_1_var_shape.html", "struct_tomographer_1_1_m_a_t_1_1_var_shape" ],
    [ "GetStdVector", "struct_tomographer_1_1_m_a_t_1_1_get_std_vector.html", "struct_tomographer_1_1_m_a_t_1_1_get_std_vector" ],
    [ "VarValueDecoder< GetStdVector< T, IsRowMajor > >", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_get_std_vector_3_01_t_00_01_is_row_major_01_4_01_4.html", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_get_std_vector_3_01_t_00_01_is_row_major_01_4_01_4" ],
    [ "VarValueDecoder< Eigen::Matrix< Scalar, Rows, Cols, Options, MaxRows, MaxCols > >", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_eigen_1_1_matrix_3_01_scalar_00_01_rows_754c7a998cb5acea51dddda1c3ab195f.html", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01_eigen_1_1_matrix_3_01_scalar_00_01_rows_754c7a998cb5acea51dddda1c3ab195f" ],
    [ "VarValueDecoder< std::vector< Eigen::Matrix< Scalar, Rows, Cols, Options, MaxRows, MaxCols >, Alloc > >", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01std_1_1vector_3_01_eigen_1_1_matrix_3_01_ef693ddb0893d8b556aaba7238c62a3f.html", "struct_tomographer_1_1_m_a_t_1_1_var_value_decoder_3_01std_1_1vector_3_01_eigen_1_1_matrix_3_01_ef693ddb0893d8b556aaba7238c62a3f" ],
    [ "MAT_SWITCH_COMPLEX_TYPE", "ezmatio_8h.html#a502df46a55d6d31cca41f81010697dbf", null ],
    [ "MAT_SWITCH_REAL_TYPE", "ezmatio_8h.html#a790f4799f7e70c11df9b903cfc74dbd9", null ],
    [ "MAT_SWITCH_TYPE", "ezmatio_8h.html#a284382c5167e8cdf943d0a3368c3bff8", null ],
    [ "get_numel", "ezmatio_8h.html#a3940dad1722075fe02a8c5b66a546f46", null ],
    [ "operator<<", "ezmatio_8h.html#a036952373e5255aabccb4450630c71b2", null ],
    [ "operator<<", "ezmatio_8h.html#afad2b08fce754ddea414ec8cfbd1c6ce", null ],
    [ "operator<<", "ezmatio_8h.html#a6a17ffe70ef46033428a5593d76ffb6f", null ],
    [ "operator<<", "ezmatio_8h.html#ac4b8b1896e1c664a30d1bc2cc84c2b0b", null ],
    [ "value", "ezmatio_8h.html#ae29d812179fdb61f3dbe1ace36c06e7b", null ],
    [ "value", "ezmatio_8h.html#af32dfe2e56c8cb69097be146632a8ff7", null ]
];